{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst datePickerInput = document.querySelector('input[id=\"datetime-picker\"]');\nconst startBtn = document.querySelector('button[data-start]');\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate = null;\nstartBtn.disabled = true;\n\nconst fp = flatpickr(datePickerInput);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      izitoast.error({ position: 'topRight', message: 'Please choose a date in the future',});\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePickerInput, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', onStart);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction onStart() {\n  startBtn.disabled = true;\n  datePickerInput.disabled = true;\n\n  userSelectedDate = setInterval(() => {\n    let countDown = new Date(datePickerInput.value) - new Date();\n    if (countDown >= 0) {\n      let time = convertMs(countDown);\n\n      days.textContent = addLeadingZero(time.days);\n      hours.textContent = addLeadingZero(time.hours);\n      minutes.textContent = addLeadingZero(time.minutes);\n      seconds.textContent = addLeadingZero(time.seconds);\n    } else {\n      iziToast.show({\n        message: 'CountDown finished',\n        messageColor: '#f44566',\n        messageSize: '18px',\n        backgroundColor: '#ffffff',\n        position: 'topRight',\n        timeout: 2500,\n      });\n      clearInterval(userSelectedDate);\n    }\n  }, 1000);\n}"],"names":["datePickerInput","startBtn","days","hours","minutes","seconds","userSelectedDate","flatpickr","options","selectedDates","izitoast","convertMs","ms","onStart","addLeadingZero","value","countDown","time"],"mappings":"+IASA,MAAMA,EAAkB,SAAS,cAAc,6BAA6B,EACtEC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EAAmB,KACvBL,EAAS,SAAW,GAETM,EAAUP,CAAe,EAEpC,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,IAAM,IAAI,KAC1BC,EAAS,MAAM,CAAE,SAAU,WAAY,QAAS,oCAAoC,CAAE,EAEtFT,EAAS,SAAW,EAEvB,CACH,EAEAM,EAAUP,EAAiBQ,CAAO,EAElC,SAASG,EAAUC,EAAI,CAMrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAC1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EACpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EACjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAJ,EAAS,iBAAiB,QAASY,CAAO,EAE1C,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,GAAU,CACjBZ,EAAS,SAAW,GACpBD,EAAgB,SAAW,GAE3BM,EAAmB,YAAY,IAAM,CACnC,IAAIU,EAAY,IAAI,KAAKhB,EAAgB,KAAK,EAAI,IAAI,KACtD,GAAIgB,GAAa,EAAG,CAClB,IAAIC,EAAON,EAAUK,CAAS,EAE9Bd,EAAK,YAAcY,EAAeG,EAAK,IAAI,EAC3Cd,EAAM,YAAcW,EAAeG,EAAK,KAAK,EAC7Cb,EAAQ,YAAcU,EAAeG,EAAK,OAAO,EACjDZ,EAAQ,YAAcS,EAAeG,EAAK,OAAO,CACvD,MACM,SAAS,KAAK,CACZ,QAAS,qBACT,aAAc,UACd,YAAa,OACb,gBAAiB,UACjB,SAAU,WACV,QAAS,IACjB,CAAO,EACD,cAAcX,CAAgB,CAEjC,EAAE,GAAI,CACT"}